// source: echo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var echo_pb = require('./echo_pb');
goog.object.extend(proto, echo_pb);
goog.exportSymbol('proto.myecho.GreeterServiceClient', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myecho.GreeterServiceClient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.myecho.GreeterServiceClient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myecho.GreeterServiceClient.displayName = 'proto.myecho.GreeterServiceClient';
}

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?Object} options
 * @constructor
 * @struct
 * @final
 */
proto.myecho.GreeterServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options['format'] = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname;

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?Object} options
 * @constructor
 * @struct
 * @final
 */
proto.myecho.GreeterServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options['format'] = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname;

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.myecho.PingRequest,
 *   !proto.myecho.PingResponse>}
 */
const methodDescriptor_GreeterService_Ping = new grpc.web.MethodDescriptor(
  '/myecho.GreeterService/Ping',
  grpc.web.MethodType.UNARY,
  proto.myecho.PingRequest,
  proto.myecho.PingResponse,
  /**
   * @param {!proto.myecho.PingRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.myecho.PingResponse.deserializeBinary
);


/**
 * @param {!proto.myecho.PingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.myecho.PingResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.myecho.PingResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.myecho.GreeterServiceClient.prototype.ping =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/myecho.GreeterService/Ping',
      request,
      metadata || {},
      methodDescriptor_GreeterService_Ping,
      callback);
};


/**
 * @param {!proto.myecho.PingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.myecho.PingResponse>}
 *     Promise that resolves to the response
 */
proto.myecho.GreeterServicePromiseClient.prototype.ping =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/myecho.GreeterService/Ping',
      request,
      metadata || {},
      methodDescriptor_GreeterService_Ping);
};


module.exports = proto.myecho;
